@model CustomerUserSettingsModel
@using Ks.Core.Domain.Customers;
@{
    //page title
    ViewBag.Title = T("Admin.Configuration.Settings.CustomerUser").Text;
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-configuration.png")" alt="" />
            @T("Admin.Configuration.Settings.CustomerUser")
        </div>
        <div class="options">
            <input type="submit" name="save" class="k-button" value="@T("Admin.Common.Save")" />
        </div>
    </div>

    @Html.ValidationSummary(false)

    <script>
        $(document).ready(function () {
            $("#customersettings-edit").kendoTabStrip({
                animation: {
                    open: {
                        effects: "fadeIn"
                    }
                },
                select: tabstrip_on_tab_select
            });
        });
    </script>
    <div id="customersettings-edit">
        <ul>
            <li @Html.RenderSelectedTabIndex(0, GetSelectedTabIndex())>
                @T("Admin.Configuration.Settings.CustomerUser.CustomerSettings")
            </li>
            <li @Html.RenderSelectedTabIndex(1, GetSelectedTabIndex())>
                @T("Admin.Configuration.Settings.CustomerUser.CustomerFormFields")
            </li>
            <li @Html.RenderSelectedTabIndex(2, GetSelectedTabIndex())>
                @T("Admin.Configuration.Settings.CustomerUser.AddressFormFields")
            </li>
            <li @Html.RenderSelectedTabIndex(3, GetSelectedTabIndex())>
                @T("Admin.Configuration.Settings.CustomerUser.DateTimeSettings")
            </li>
        </ul>
        <div>
            @TabCustomerSettings()
        </div>
        <div>
            @TabCustomerFormFields()
        </div>
        <div>
            @TabAddressFormFields()
        </div>
        <div>
            @TabDateTimeSettings()
        </div>
    </div>

    {
        //custom tabs
        var eventMessage = new AdminTabStripCreated(this.Html, "customersettings-edit");
        EngineContext.Current.Resolve<IEventPublisher>().Publish(eventMessage);
        foreach (var eventBlock in eventMessage.BlocksToRender)
        {
            @eventBlock
        }
    }

    @*save selected tab index*@
    <input type="hidden" id="selected-tab-index" name="selected-tab-index" value="@(GetSelectedTabIndex())">

}
@helper TabCustomerSettings()
{
    <script type="text/javascript">
        $(document).ready(function () {

            $("#@Html.FieldIdFor(model => model.CustomerSettings.UsernamesEnabled)").click(toggleUsername);
            toggleUsername();
        });


        function toggleUsername() {
            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.UsernamesEnabled)').is(':checked')) {
                $('#pnlAllowUsersToChangeUsernames').show();
                $('#pnlCheckUsernameAvailability').show();
            }
            else {
                $('#pnlAllowUsersToChangeUsernames').hide();
                $('#pnlCheckUsernameAvailability').hide();
            }
        }

    </script>
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.UsernamesEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.UsernamesEnabled)
                @Html.ValidationMessageFor(model => model.CustomerSettings.UsernamesEnabled)
            </td>
        </tr>
        <tr id="pnlAllowUsersToChangeUsernames">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.AllowUsersToChangeUsernames):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.AllowUsersToChangeUsernames)
                @Html.ValidationMessageFor(model => model.CustomerSettings.AllowUsersToChangeUsernames)
            </td>
        </tr>
        <tr id="pnlCheckUsernameAvailability">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.CheckUsernameAvailabilityEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.CheckUsernameAvailabilityEnabled)
                @Html.ValidationMessageFor(model => model.CustomerSettings.CheckUsernameAvailabilityEnabled)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.UserRegistrationType):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.CustomerSettings.UserRegistrationType, ((UserRegistrationType)Model.CustomerSettings.UserRegistrationType).ToSelectList())
                @Html.ValidationMessageFor(model => model.CustomerSettings.UserRegistrationType)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.ShowCustomersJoinDate):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.ShowCustomersJoinDate)
                @Html.ValidationMessageFor(model => model.CustomerSettings.ShowCustomersJoinDate)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.AllowViewingProfiles):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.AllowViewingProfiles)
                @Html.ValidationMessageFor(model => model.CustomerSettings.AllowViewingProfiles)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.NotifyNewCustomerRegistration):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.NotifyNewCustomerRegistration)
                @Html.ValidationMessageFor(model => model.CustomerSettings.NotifyNewCustomerRegistration)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.HideDownloadableProductsTab):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.HideDownloadableProductsTab)
                @Html.ValidationMessageFor(model => model.CustomerSettings.HideDownloadableProductsTab)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.HideBackInStockSubscriptionsTab):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.HideBackInStockSubscriptionsTab)
                @Html.ValidationMessageFor(model => model.CustomerSettings.HideBackInStockSubscriptionsTab)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.CustomerNameFormat):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.CustomerSettings.CustomerNameFormat, ((CustomerNameFormat)Model.CustomerSettings.CustomerNameFormat).ToSelectList())
                @Html.ValidationMessageFor(model => model.CustomerSettings.CustomerNameFormat)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.DefaultPasswordFormat):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.CustomerSettings.DefaultPasswordFormat, ((PasswordFormat)Model.CustomerSettings.DefaultPasswordFormat).ToSelectList())
                @Html.ValidationMessageFor(model => model.CustomerSettings.DefaultPasswordFormat)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.PasswordMinLength):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.PasswordMinLength)
                @Html.ValidationMessageFor(model => model.CustomerSettings.PasswordMinLength)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.PasswordRecoveryLinkDaysValid):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.PasswordRecoveryLinkDaysValid)
                @Html.ValidationMessageFor(model => model.CustomerSettings.PasswordRecoveryLinkDaysValid)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.StoreLastVisitedPage):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.StoreLastVisitedPage)
                @Html.ValidationMessageFor(model => model.CustomerSettings.StoreLastVisitedPage)
            </td>
        </tr>
    </table>
}
@helper TabCustomerFormFields()
{
    <script type="text/javascript">
        $(document).ready(function () {
            $("#@Html.FieldIdFor(model => model.CustomerSettings.AdmiCodeEnabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.DniEnabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.DateOfBirthEnabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.DateOfBirthRequired)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.StreetAddressEnabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.StreetAddress2Enabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.CityEnabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.PhoneEnabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.FaxEnabled)").click(toggleCustomerRequiredFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.CountryEnabled)").click(toggleCustomerCountryFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.StateProvinceEnabled)").click(toggleCustomerStateProvinceFormField);
            $("#@Html.FieldIdFor(model => model.CustomerSettings.CityEnabled)").click(toggleCustomerCityFormField);

            toggleCustomerCountryFormField();
            toggleCustomerStateProvinceFormField();
            toggleCustomerCityFormField();
            toggleCustomerRequiredFormField();
        });

        function toggleCustomerCountryFormField() {
            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.CountryEnabled)').is(':checked')) {
                $('#pnlCustomerCountryRequired').show();
                $('#pnlCustomerStateProvinceEnabled').show();
                toggleCustomerStateProvinceFormField();
            } else {
                $('#pnlCustomerCountryRequired').hide();
                $('#pnlCustomerStateProvinceEnabled').hide();
                toggleCustomerStateProvinceFormField();
            }
        }

        function toggleCustomerStateProvinceFormField() {
            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.CountryEnabled)').is(':checked') &&
                $('#@Html.FieldIdFor(model => model.CustomerSettings.StateProvinceEnabled)').is(':checked')) {
                $('#pnlCustomerStateProvinceRequired').show();
                $('#pnlCustomerCityEnabled').show();
            } else {
                $('#pnlCustomerStateProvinceRequired').hide();
                $('#pnlCustomerCityEnabled').hide();
            }
        }
        function toggleCustomerCityFormField() {
            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.CountryEnabled)').is(':checked') &&
                $('#@Html.FieldIdFor(model => model.CustomerSettings.StateProvinceEnabled)').is(':checked') &&
                $('#@Html.FieldIdFor(model => model.CustomerSettings.CityEnabled)').is(':checked')) {
                $('#pnlCustomerCityRequired').show();
            } else {
                $('#pnlCustomerCityRequired').hide();
            }
        }

        function toggleCustomerRequiredFormField() {
            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.AdmiCodeEnabled)').is(':checked')) {
                $('#pnlCustomerAdmiCodeRequired').show();
            } else {
                $('#pnlCustomerAdmiCodeRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.DniEnabled)').is(':checked')) {
                $('#pnlCustomerDniRequired').show();
            } else {
                $('#pnlCustomerDniRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.DateOfBirthEnabled)').is(':checked')) {
                $('#pnlCustomerDateOfBirthRequired').show();
            } else {
                $('#pnlCustomerDateOfBirthRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.DateOfBirthEnabled)').is(':checked') &&
                $('#@Html.FieldIdFor(model => model.CustomerSettings.DateOfBirthRequired)').is(':checked')) {
                $('#pnlDateOfBirthMinimumAge').show();
            } else {
                $('#pnlDateOfBirthMinimumAge').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.StreetAddressEnabled)').is(':checked')) {
                $('#pnlCustomerStreetAddressRequired').show();
            } else {
                $('#pnlCustomerStreetAddressRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.StreetAddress2Enabled)').is(':checked')) {
                $('#pnlCustomerStreetAddress2Required').show();
            } else {
                $('#pnlCustomerStreetAddress2Required').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.CityEnabled)').is(':checked')) {
                $('#pnlCustomerCityRequired').show();
            } else {
                $('#pnlCustomerCityRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.PhoneEnabled)').is(':checked')) {
                $('#pnlCustomerPhoneRequired').show();
            } else {
                $('#pnlCustomerPhoneRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.CustomerSettings.FaxEnabled)').is(':checked')) {
                $('#pnlCustomerFaxRequired').show();
            } else {
                $('#pnlCustomerFaxRequired').hide();
            }
        }


    </script>
    <table class="adminContent">
        <tr>
            <td colspan="2">
                <em>@T("Admin.Configuration.Settings.CustomerUser.CustomerFormFields.Description")</em>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.GenderEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.GenderEnabled)
                @Html.ValidationMessageFor(model => model.CustomerSettings.GenderEnabled)
            </td>
        </tr>
    <tr>
        <td class="adminTitle">
            @Html.KsLabelFor(model => model.CustomerSettings.AdmiCodeEnabled):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.CustomerSettings.AdmiCodeEnabled)
            @Html.ValidationMessageFor(model => model.CustomerSettings.AdmiCodeEnabled)
        </td>
    </tr>
    <tr id="pnlCustomerAdmiCodeRequired">
        <td class="adminTitle">
            @Html.KsLabelFor(model => model.CustomerSettings.AdmiCodeRequired):
        </td>
        <td class="adminData">
            @Html.EditorFor(model => model.CustomerSettings.AdmiCodeRequired)
            @Html.ValidationMessageFor(model => model.CustomerSettings.AdmiCodeRequired)
        </td>
    </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.DniEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.DniEnabled)
                @Html.ValidationMessageFor(model => model.CustomerSettings.DniEnabled)
            </td>
        </tr>
        <tr id="pnlCustomerDniRequired">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.DniRequired):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.DniRequired)
                @Html.ValidationMessageFor(model => model.CustomerSettings.DniRequired)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.DateOfBirthEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.DateOfBirthEnabled)
                @Html.ValidationMessageFor(model => model.CustomerSettings.DateOfBirthEnabled)
            </td>
        </tr>
        <tr id="pnlCustomerDateOfBirthRequired">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.DateOfBirthRequired):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.DateOfBirthRequired)
                @Html.ValidationMessageFor(model => model.CustomerSettings.DateOfBirthRequired)
            </td>
        </tr>
        <tr id="pnlDateOfBirthMinimumAge">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.DateOfBirthMinimumAge):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.DateOfBirthMinimumAge)
                @Html.ValidationMessageFor(model => model.CustomerSettings.DateOfBirthMinimumAge)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.StreetAddressEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.StreetAddressEnabled)
                @Html.ValidationMessageFor(model => model.CustomerSettings.StreetAddressEnabled)
            </td>
        </tr>
        <tr id="pnlCustomerStreetAddressRequired">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.StreetAddressRequired):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.StreetAddressRequired)
                @Html.ValidationMessageFor(model => model.CustomerSettings.StreetAddressRequired)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.StreetAddress2Enabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.StreetAddress2Enabled)
                @Html.ValidationMessageFor(model => model.CustomerSettings.StreetAddress2Enabled)
            </td>
        </tr>
        <tr id="pnlCustomerStreetAddress2Required">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.StreetAddress2Required):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.StreetAddress2Required)
                @Html.ValidationMessageFor(model => model.CustomerSettings.StreetAddress2Required)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.CountryEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.CountryEnabled)
                @Html.ValidationMessageFor(model => model.CustomerSettings.CountryEnabled)
            </td>
        </tr>
        <tr id="pnlCustomerCountryRequired">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.CountryRequired):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.CountryRequired)
                @Html.ValidationMessageFor(model => model.CustomerSettings.CountryRequired)
            </td>
        </tr>
        <tr id="pnlCustomerStateProvinceEnabled">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.StateProvinceEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.StateProvinceEnabled)
                @Html.ValidationMessageFor(model => model.CustomerSettings.StateProvinceEnabled)
            </td>
        </tr>
        <tr id="pnlCustomerStateProvinceRequired">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.StateProvinceRequired):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.StateProvinceRequired)
                @Html.ValidationMessageFor(model => model.CustomerSettings.StateProvinceRequired)
            </td>
        </tr>
        <tr id="pnlCustomerCityEnabled">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.CityEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.CityEnabled)
                @Html.ValidationMessageFor(model => model.CustomerSettings.CityEnabled)
            </td>
        </tr>
        <tr id="pnlCustomerCityRequired">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.CityRequired):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.CityRequired)
                @Html.ValidationMessageFor(model => model.CustomerSettings.CityRequired)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.PhoneEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.PhoneEnabled)
                @Html.ValidationMessageFor(model => model.CustomerSettings.PhoneEnabled)
            </td>
        </tr>
        <tr id="pnlCustomerPhoneRequired">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.PhoneRequired):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.PhoneRequired)
                @Html.ValidationMessageFor(model => model.CustomerSettings.PhoneRequired)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.FaxEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.FaxEnabled)
                @Html.ValidationMessageFor(model => model.CustomerSettings.FaxEnabled)
            </td>
        </tr>
        <tr id="pnlCustomerFaxRequired">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.CustomerSettings.FaxRequired):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.CustomerSettings.FaxRequired)
                @Html.ValidationMessageFor(model => model.CustomerSettings.FaxRequired)
            </td>
        </tr>

    </table>
    //render custom customer attributes
    @Html.Action("ListBlock", "CustomerAttribute")
}
@helper TabAddressFormFields()
{
    <script type="text/javascript">
        $(document).ready(function () {

            $("#@Html.FieldIdFor(model => model.AddressSettings.StreetAddressEnabled)").click(toggleAddressRequiredFormField);
            $("#@Html.FieldIdFor(model => model.AddressSettings.StreetAddress2Enabled)").click(toggleAddressRequiredFormField);
            $("#@Html.FieldIdFor(model => model.AddressSettings.CountryEnabled)").click(toggleAddressCountryFormField);
            $("#@Html.FieldIdFor(model => model.AddressSettings.StateProvinceEnabled)").click(toggleAddressStateProvinceFormField);
            $("#@Html.FieldIdFor(model => model.AddressSettings.CityEnabled)").click(toggleAddressRequiredFormField);
            $("#@Html.FieldIdFor(model => model.AddressSettings.ZipPostalCodeEnabled)").click(toggleAddressRequiredFormField);
            $("#@Html.FieldIdFor(model => model.AddressSettings.PhoneEnabled)").click(toggleAddressRequiredFormField);
            $("#@Html.FieldIdFor(model => model.AddressSettings.FaxEnabled)").click(toggleAddressRequiredFormField);

            toggleAddressCountryFormField();
            toggleAddressStateProvinceFormField();
            toggleAddressRequiredFormField();
        });

        function toggleAddressCountryFormField() {
            if ($('#@Html.FieldIdFor(model => model.AddressSettings.CountryEnabled)').is(':checked')) {
                $('#pnlAddressStateProvinceEnabled').show();
            }
            else {
                $('#pnlAddressStateProvinceEnabled').hide();
            }
        }

        function toggleAddressStateProvinceFormField() {
            if ($('#@Html.FieldIdFor(model => model.AddressSettings.StateProvinceEnabled)').is(':checked')) {
                $('#pnlAddressCityEnabled').show();
                $('#pnlAddressStateProvinceRequired').show();
            }
            else {
                $('#pnlAddressCityEnabled').hide();
                $('#pnlAddressStateProvinceRequired').hide();
            }
        }

        function toggleAddressRequiredFormField() {

            if ($('#@Html.FieldIdFor(model => model.AddressSettings.StreetAddressEnabled)').is(':checked')) {
                $('#pnlAddressStreetAddressRequired').show();
            }
            else {
                $('#pnlAddressStreetAddressRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.AddressSettings.StreetAddress2Enabled)').is(':checked')) {
                $('#pnlAddressStreetAddress2Required').show();
            }
            else {
                $('#pnlAddressStreetAddress2Required').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.AddressSettings.CityEnabled)').is(':checked')) {
                $('#pnlAddressCityRequired').show();
            }
            else {
                $('#pnlAddressCityRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.AddressSettings.ZipPostalCodeEnabled)').is(':checked')) {
                $('#pnlAddressZipPostalCodeRequired').show();
            }
            else {
                $('#pnlAddressZipPostalCodeRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.AddressSettings.PhoneEnabled)').is(':checked')) {
                $('#pnlAddressPhoneRequired').show();
            }
            else {
                $('#pnlAddressPhoneRequired').hide();
            }

            if ($('#@Html.FieldIdFor(model => model.AddressSettings.FaxEnabled)').is(':checked')) {
                $('#pnlAddressFaxRequired').show();
            }
            else {
                $('#pnlAddressFaxRequired').hide();
            }
        }

    </script>
    <table class="adminContent">
        <tr>
            <td colspan="2">
                <em>@T("Admin.Configuration.Settings.CustomerUser.AddressFormFields.Description")</em>
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.CountryEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.CountryEnabled)
                @Html.ValidationMessageFor(model => model.AddressSettings.CountryEnabled)
            </td>
        </tr>
        <tr id="pnlAddressStateProvinceEnabled">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.StateProvinceEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.StateProvinceEnabled)
                @Html.ValidationMessageFor(model => model.AddressSettings.StateProvinceEnabled)
            </td>
        </tr>
        <tr id="pnlAddressStateProvinceRequired">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.StateProvinceRequired):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.StateProvinceRequired)
                @Html.ValidationMessageFor(model => model.AddressSettings.StateProvinceRequired)
            </td>
        </tr>
        <tr id="pnlAddressCityEnabled">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.CityEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.CityEnabled)
                @Html.ValidationMessageFor(model => model.AddressSettings.CityEnabled)
            </td>
        </tr>
        <tr id="pnlAddressCityRequired">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.CityRequired):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.CityRequired)
                @Html.ValidationMessageFor(model => model.AddressSettings.CityRequired)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.StreetAddressEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.StreetAddressEnabled)
                @Html.ValidationMessageFor(model => model.AddressSettings.StreetAddressEnabled)
            </td>
        </tr>
        <tr id="pnlAddressStreetAddressRequired">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.StreetAddressRequired):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.StreetAddressRequired)
                @Html.ValidationMessageFor(model => model.AddressSettings.StreetAddressRequired)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.StreetAddress2Enabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.StreetAddress2Enabled)
                @Html.ValidationMessageFor(model => model.AddressSettings.StreetAddress2Enabled)
            </td>
        </tr>
        <tr id="pnlAddressStreetAddress2Required">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.StreetAddress2Required):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.StreetAddress2Required)
                @Html.ValidationMessageFor(model => model.AddressSettings.StreetAddress2Required)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.ZipPostalCodeEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.ZipPostalCodeEnabled)
                @Html.ValidationMessageFor(model => model.AddressSettings.ZipPostalCodeEnabled)
            </td>
        </tr>
        <tr id="pnlAddressZipPostalCodeRequired">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.ZipPostalCodeRequired):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.ZipPostalCodeRequired)
                @Html.ValidationMessageFor(model => model.AddressSettings.ZipPostalCodeRequired)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.PhoneEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.PhoneEnabled)
                @Html.ValidationMessageFor(model => model.AddressSettings.PhoneEnabled)
            </td>
        </tr>
        <tr id="pnlAddressPhoneRequired">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.PhoneRequired):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.PhoneRequired)
                @Html.ValidationMessageFor(model => model.AddressSettings.PhoneRequired)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.FaxEnabled):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.FaxEnabled)
                @Html.ValidationMessageFor(model => model.AddressSettings.FaxEnabled)
            </td>
        </tr>
        <tr id="pnlAddressFaxRequired">
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.AddressSettings.FaxRequired):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.AddressSettings.FaxRequired)
                @Html.ValidationMessageFor(model => model.AddressSettings.FaxRequired)
            </td>
        </tr>
    </table>
    //render custom address attributes
    @Html.Action("ListBlock", "AddressAttribute")
}
@helper TabDateTimeSettings()
{
    <table class="adminContent">
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.DateTimeSettings.AllowCustomersToSetTimeZone):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.DateTimeSettings.AllowCustomersToSetTimeZone)
                @Html.ValidationMessageFor(model => model.DateTimeSettings.AllowCustomersToSetTimeZone)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.DateTimeSettings.DefaultStoreTimeZoneId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.DateTimeSettings.DefaultStoreTimeZoneId, Model.DateTimeSettings.AvailableTimeZones)
                @Html.ValidationMessageFor(model => model.DateTimeSettings.DefaultStoreTimeZoneId)
            </td>
        </tr>
    </table>
}


