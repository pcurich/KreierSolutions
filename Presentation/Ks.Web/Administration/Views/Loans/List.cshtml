@model  LoanListModel
@{
    var defaultGridPageSize = EngineContext.Current.Resolve<Ks.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Ks.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    //page title
    ViewBag.Title = T("Admin.Customers.Customers").Text;
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="section-header">
        <div class="title">
            <img src="@Url.Content("~/Administration/Content/images/ico-customers.png")" alt="" />
            @T("Admin.Customers.Customers")
        </div>
        <div class="options">
            <a href="@Url.Action("Create")" class="k-button">@T("Admin.Common.AddNew")</a>
            <input type="submit" name="exportxml-all" class="k-button" value="@T("Admin.Common.ExportToXml.All")" />
            <input type="button" id="exportxml-selected" class="k-button" value="@T("Admin.Common.ExportToXml.Selected")" />
            <input type="submit" name="exportexcel-all" class="k-button" value="@T("Admin.Common.ExportToExcel.All")" />
            <input type="button" id="exportexcel-selected" class="k-button" value="@T("Admin.Common.ExportToExcel.Selected")" />
        </div>
    </div>
    <table width="100%">
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.SearchLoanNumber):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SearchLoanNumber)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.SearchAdmCode):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SearchAdmCode)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.SearchDni):
            </td>
            <td class="adminData">
                @Html.EditorFor(model => model.SearchDni)
            </td>
        </tr>
        <tr>
            <td class="adminTitle">
                @Html.KsLabelFor(model => model.StateId):
            </td>
            <td class="adminData">
                @Html.DropDownListFor(model => model.StateId, Model.States)
                <script>
                    $(document).ready(function() {
                        $('#@Html.FieldIdFor(x=>x.StateId)').kendoDropDownList();
                    });
                </script>
            </td>
        </tr>
        <tr>
            <td colspan="2">
                <input type="button" id="search-Loans" class="k-button" value="@T("Admin.Common.Search")" />
            </td>
        </tr>
    </table>
    <table class="adminContent">
        <tr>
            <td>
                <div id="Loans-grid"></div>

                <script>
                    $(document).ready(function() {
                        $("#Loans-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("List", "Loans"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: additionalData
                                    }
                                },
                                schema: {
                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors"
                                },
                                error: function(e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: @(defaultGridPageSize),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                pageSizes: [@(gridPageSizes)]
                            },
                            scrollable: false,
                            dataBound: onDataBound,
                            columns: [
                              {
                                  field: "LoanNumber",
                                  title: "@T("Admin.Contract.Contribution.Fields.LoanNumber")",
                                  width: 10
                              }, {
                                  field: "CustomerCompleteName",
                                  title: "@T("Admin.Contract.Contribution.Fields.CustomerCompleteName")",
                                  width: 80
                              }, {
                                  field: "CustomerDni",
                                  title: "@T("Admin.Contract.Contribution.Fields.CustomerDni")",
                                  width: 40
                              }, {
                                  field: "CustomerAdmCode",
                                  title: "@T("Admin.Contract.Contribution.Fields.CustomerAdmCode")",
                                  width: 50
                              }, {
                                  field: "LoanAmount",
                                  title: "@T("Admin.Contract.Loan.Fields.LoanAmount")",
                                  width: 50,
                                  template:'#= kendo.toString(LoanAmount,"c","es-PE") #',
                                  format:"{0:c2}"
                              },  {
                                  field: "TotalFeed",
                                  title: "@T("Admin.Contract.Loan.Fields.TotalFeed")",
                                  width: 50,
                                  template:'#= kendo.toString(TotalFeed,"c","es-PE") #',
                                  format:"{0:c2}"
                              },{
                                  field: "TotalAmount",
                                  title: "@T("Admin.Contract.Loan.Fields.TotalAmount")",
                                  width: 50,
                                  template:'#= kendo.toString(TotalAmount,"c","es-PE") #',
                                  format:"{0:c2}"
                              },{
                                  field: "TotalPayed",
                                  title: "@T("Admin.Contract.Loan.Fields.TotalPayed")",
                                  width: 50,
                                  template:'#= kendo.toString(TotalPayed,"c","es-PE") #',
                                  format:"{0:c2}"
                              },{
                                  field: "Active",
                                  title: "@T("Admin.Contract.Loan.Fields.Active")",
                                  width: 20,
                                  headerAttributes: { style: "text-align:center" },
                                  attributes: { style: "text-align:center" },
                                  template: '<img src="@Url.Content("~/Administration/Content/images/")active-#=Active#.gif" />'
                              }, {
                                  field: "CreatedOn",
                                  title: "@T("Admin.Contract.Loan.Fields.CreatedOn")",
                                  width: 50,
                                  template:'#= CreatedOn!=null ? kendo.toString(CreatedOn,"dd/MM/yyyy","es-PE"): " "#',
                                  type: "date",
                                  format: "{0:G}"
                              }, {
                                  field: "UpdatedOn",
                                  title: "@T("Admin.Contract.Loan.Fields.UpdatedOn")",
                                  width: 50,
                                  template:'#= UpdatedOn!=null ? kendo.toString(UpdatedOn,"dd/MM/yyyy","es-PE"): " "#',
                                  type: "date",
                                  format: "{0:G}"
                              }, {
                                  field: "Id",
                                  title: "@T("Admin.Common.Edit")",
                                  width: 50,
                                  template: '<a href="Edit/#=Id#">@T("Admin.Common.Edit")</a>'
                              }
                            ]
                        });
                    });
                </script>

                <script type="text/javascript">

                    var selectedIds = [];

                    $(document).ready(function () {

                        //search button
                        $('#search-Loans').click(function () {
                            var grid = $('#Loans-grid').data('kendoGrid');
                            grid.dataSource.page(1); //new search. Set page size to 1
                            //grid.dataSource.read(); we already loaded the grid above using "page" function
                            //clear selected checkboxes
                            $('.checkboxGroups').attr('checked', false).change();
                            selectedIds = [];
                            return false;
                        });

                        $("#@Html.FieldIdFor(model => model.SearchDni)").keydown(function (event) {
                            if (event.keyCode == 13) {
                                $("#search-Loans").click();
                                return false;
                            }
                        });
                        $("#@Html.FieldIdFor(model => model.SearchAdmCode)").keydown(function (event) {
                            if (event.keyCode == 13) {
                                $("#search-Loans").click();
                                return false;
                            }
                        });
                        $("#@Html.FieldIdFor(model => model.SearchLoanNumber)").keydown(function (event) {
                            if (event.keyCode == 13) {
                                $("#search-Loans").click();
                                return false;
                            }
                        });


                        $('#mastercheckbox').click(function () {
                            $('.checkboxGroups').attr('checked', $(this).is(':checked')).change();
                        });

                        //wire up checkboxes.
                        $('#Loans-grid').on('change', 'input[type=checkbox][id!=mastercheckbox]', function (e) {
                            var $check = $(this);
                            if ($check.is(":checked") == true) {
                                var checked = jQuery.inArray($check.val(), selectedIds);
                                if (checked == -1) {
                                    //add id to selectedIds.
                                    selectedIds.push($check.val());
                                }
                            }
                            else {
                                var checked = jQuery.inArray($check.val(), selectedIds);
                                if (checked > -1) {
                                    //remove id from selectedIds.
                                    selectedIds = $.grep(selectedIds, function (item, index) {
                                        return item != $check.val();
                                    });
                                }
                            }
                            updateMasterCheckbox();
                        });
                    });

                    function onDataBound(e) {

                        $('#Loans-grid input[type=checkbox][id!=mastercheckbox]').each(function () {
                            var currentId = $(this).val();
                            var checked = jQuery.inArray(currentId, selectedIds);
                            //set checked based on if current checkbox's value is in selectedIds.
                            $(this).attr('checked', checked > -1);
                        });

                        updateMasterCheckbox();
                    }

                    function updateMasterCheckbox() {
                        var numChkBoxes = $('#Loans-grid input[type=checkbox][id!=mastercheckbox]').length;
                        var numChkBoxesChecked = $('#Loans-grid input[type=checkbox][id!=mastercheckbox]:checked').length;
                        $('#mastercheckbox').attr('checked', numChkBoxes == numChkBoxesChecked && numChkBoxes > 0);
                    }

                    function additionalData() {
                        var data = {
                            SearchDni: $('#@Html.FieldIdFor(model => model.SearchDni)').val(),
                            SearchAdmCode: $('#@Html.FieldIdFor(model => model.SearchAdmCode)').val(),
                            SearchLoanNumber: $('#@Html.FieldIdFor(model => model.SearchLoanNumber)').val(),
                            StateId: $('#@Html.FieldIdFor(model => model.StateId)').val()
                        };
                        addAntiForgeryToken(data);
                        return data;
                    }
                </script>
            </td>

        </tr>
    </table>

}
