@model IList<Ks.Web.Models.Customer.CustomerAttributeModel>
@using Ks.Core.Domain.Catalog;
@foreach (var attribute in Model)
{
    string controlId = string.Format("customer_attribute_{0}", attribute.Id);
    string textPrompt = attribute.Name;

    <div class="inputs custom-attributes">
        @{
    if (AttributeControlType.Datepicker != attribute.AttributeControlType)
    {
        <label>@textPrompt:</label>
    }
        }

        @switch (attribute.AttributeControlType)
        {
            case AttributeControlType.DropdownList:
                {
                    <select name="@(controlId)" id="@(controlId)">
                        @if (!attribute.IsRequired)
                        {
                        <option value="0">---</option>
                        }
                        @foreach (var attributeValue in attribute.Values)
                        {
                        <option selected="@attributeValue.IsPreSelected" value="@attributeValue.Id">@attributeValue.Name</option>
                        }
                    </select>
                }
                break;
            case AttributeControlType.RadioList:
                {
                    <ul class="option-list">
                        @foreach (var attributeValue in attribute.Values)
                        {
                        <li>
                            <input id="@(controlId)_@(attributeValue.Id)" type="radio" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" />
                            <label for="@(controlId)_@(attributeValue.Id)">@attributeValue.Name</label>
                        </li>
                        }
                    </ul>
                }
                break;
            case AttributeControlType.Checkboxes:
            case AttributeControlType.ReadonlyCheckboxes:
                {
                    <ul class="option-list">
                        @foreach (var attributeValue in attribute.Values)
                        {
                        <li>
                            <input id="@(controlId)_@(attributeValue.Id)" type="checkbox" name="@(controlId)" value="@attributeValue.Id" checked="@attributeValue.IsPreSelected" @(attribute.AttributeControlType == AttributeControlType.ReadonlyCheckboxes ? Html.Raw(" disabled=\"disabled\"") : null) />
                            <label for="@(controlId)_@(attributeValue.Id)">@attributeValue.Name</label>
                        </li>
                        }
                    </ul>
                }
                break;
            case AttributeControlType.TextBox:
                {
                    <input name="@(controlId)" type="text" class="textbox" id="@(controlId)" value="@attribute.DefaultValue" />
                }
                break;
            case AttributeControlType.MultilineTextbox:
                {
                    <textarea id="@(controlId)" name="@(controlId)">@attribute.DefaultValue</textarea>
                }
                break;
            case AttributeControlType.Datepicker:
                {
                    <div class="inputs date-of-birth">
                        <label>@textPrompt:</label>
                        @Html.DatePickerDropDowns(
                                        controlId + "Day",
                                        controlId + "Month",
                                        controlId + "Year",
                                        DateTime.Now.Year - 110,
                                        DateTime.Now.Year,
                                        attribute.Day,
                                        attribute.Month,
                                        attribute.Year, true)
                        @Html.Hidden(controlId)
                    </div>
                    <script>
                        $(document).ready(function () {
                            var ddlStates = $("#@Html.Field(model => model)");

                            var day = $(controlId + "Day").val();
                            var day = $(controlId + "Month").val();
                            var day = $(controlId + "Year").val();
                            $(controlId).val("fgg");
                        });
                    </script>

                }
                break;
            case AttributeControlType.FileUpload:
            case AttributeControlType.ColorSquares:
                {
                    //not support attribute type
                }
                break;
        }
        @if (attribute.IsRequired)
        {
            @Html.RequiredHint()
        }
    </div>
}
